/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsDate, IsOptional, ValidateNested, IsString } from "class-validator";
import { Type } from "class-transformer";
import { GuestCreateNestedManyWithoutInvitationsInput } from "./GuestCreateNestedManyWithoutInvitationsInput";
import { RsvpCreateNestedManyWithoutInvitationsInput } from "./RsvpCreateNestedManyWithoutInvitationsInput";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";

@InputType()
class InvitationCreateInput {
  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  eventDate?: Date | null;

  @ApiProperty({
    required: false,
    type: () => GuestCreateNestedManyWithoutInvitationsInput,
  })
  @ValidateNested()
  @Type(() => GuestCreateNestedManyWithoutInvitationsInput)
  @IsOptional()
  @Field(() => GuestCreateNestedManyWithoutInvitationsInput, {
    nullable: true,
  })
  guests?: GuestCreateNestedManyWithoutInvitationsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  location?: string | null;

  @ApiProperty({
    required: false,
    type: () => RsvpCreateNestedManyWithoutInvitationsInput,
  })
  @ValidateNested()
  @Type(() => RsvpCreateNestedManyWithoutInvitationsInput)
  @IsOptional()
  @Field(() => RsvpCreateNestedManyWithoutInvitationsInput, {
    nullable: true,
  })
  rsvps?: RsvpCreateNestedManyWithoutInvitationsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  template?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;
}

export { InvitationCreateInput as InvitationCreateInput };
